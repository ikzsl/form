{"version":3,"sources":["components/form/form.js","components/app/app.js","index.js"],"names":["initialValues","name","password","repassword","email","website","age","skills","acceptTerms","validate","values","errors","onSubmit","alert","JSON","stringify","Form","formik","useFormik","console","log","handleSubmit","className","htmlFor","id","type","onChange","handleChange","value","App","ReactDOM","render","document","getElementById"],"mappings":"4PAKMA,G,MAAgB,CACpBC,KAAM,GACNC,SAAU,GACVC,WAAY,GACZC,MAAO,GACPC,QAAS,GACTC,IAAK,EACLC,OAAQ,GACRC,aAAa,IAGTC,EAAW,SAACC,GAChB,IAAMC,EAAS,GAmBf,OAlBKD,EAAOT,OACVU,EAAOV,KAAO,YAEXS,EAAOR,WACVS,EAAOT,SAAW,YAEfQ,EAAOP,aACVQ,EAAOR,WAAa,YAEjBO,EAAON,QACVO,EAAOP,MAAQ,YAEZM,EAAOJ,MACVK,EAAOL,IAAM,YAEVI,EAAOF,cACVG,EAAOH,YAAc,YAEhBG,GAGHC,EAAW,SAACF,GAEhBG,MAAMC,KAAKC,UAAUL,EAAQ,KAAM,KAwItBM,EArIF,WACX,IAAMC,EAASC,YAAU,CACvBlB,gBACAS,WACAG,aAMF,OAHAO,QAAQC,IAAI,cAAeH,EAAOP,QAClCS,QAAQC,IAAI,cAAeH,EAAON,QAKhC,0BAAMC,SAAUK,EAAOI,aAAcC,UAAU,QAC7C,6BACE,2BAAOC,QAAQ,QAAf,OAEG,IACAN,EAAON,OAAOV,KAAO,0BAAMqB,UAAU,SAASL,EAAON,OAAOV,MAAe,KAC5E,2BACEuB,GAAG,OACHC,KAAK,OACLxB,KAAK,OACLyB,SAAUT,EAAOU,aACjBC,MAAOX,EAAOP,OAAOT,SAI3B,6BACE,2BAAOsB,QAAQ,OAAf,YAEGN,EAAON,OAAOT,SAAW,0BAAMoB,UAAU,SAASL,EAAON,OAAOT,UAAmB,KACpF,2BACEsB,GAAG,MACHC,KAAK,WACLxB,KAAK,WACLyB,SAAUT,EAAOU,aACjBC,MAAOX,EAAOP,OAAOR,aAI3B,6BACE,2BAAOqB,QAAQ,SAAf,cAEGN,EAAON,OAAOR,WACb,0BAAMmB,UAAU,SAASL,EAAON,OAAOR,YACrC,KACJ,2BACEqB,GAAG,QACHC,KAAK,WACLxB,KAAK,aACLyB,SAAUT,EAAOU,aACjBC,MAAOX,EAAOP,OAAOP,eAI3B,6BACE,2BAAOoB,QAAQ,SAAf,QAEGN,EAAON,OAAOP,MAAQ,0BAAMkB,UAAU,SAASL,EAAON,OAAOP,OAAgB,KAC9E,2BACEoB,GAAG,QACHC,KAAK,QACLxB,KAAK,QACLyB,SAAUT,EAAOU,aACjBC,MAAOX,EAAOP,OAAON,UAK3B,6BACE,2BAAOmB,QAAQ,QAAf,UAEE,2BACEC,GAAG,OACHC,KAAK,OACLxB,KAAK,UACLyB,SAAUT,EAAOU,aACjBC,MAAOX,EAAOP,OAAOL,YAK3B,6BACE,2BAAOkB,QAAQ,OAAf,MAEGN,EAAON,OAAOL,IAAM,0BAAMgB,UAAU,SAASL,EAAON,OAAOL,KAAc,KAC1E,2BACEkB,GAAG,MACHC,KAAK,OACLxB,KAAK,MACLyB,SAAUT,EAAOU,aACjBC,MAAOX,EAAOP,OAAOJ,QAK3B,6BACE,2BAAOiB,QAAQ,UAAf,SAEE,2BACEC,GAAG,SACHC,KAAK,OACLxB,KAAK,SACLyB,SAAUT,EAAOU,aACjBC,MAAOX,EAAOP,OAAOH,WAK3B,6BACE,2BAAOgB,QAAQ,SAAf,cAEGN,EAAON,OAAOH,YACb,0BAAMc,UAAU,SAASL,EAAON,OAAOH,aACrC,KACJ,2BACEgB,GAAG,QACHC,KAAK,WACLxB,KAAK,cACLyB,SAAUT,EAAOU,aACjBC,MAAOX,EAAOP,OAAOF,gBAK3B,6BACE,4BAAQiB,KAAK,UAAb,aC/JOI,G,MAPH,kBACV,yBAAKP,UAAU,OACb,4CACA,kBAAC,EAAD,SCHJQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b5f129b4.chunk.js","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\n\nimport './form.scss';\n\nconst initialValues = {\n  name: '',\n  password: '',\n  repassword: '',\n  email: '',\n  website: '',\n  age: 0,\n  skills: [],\n  acceptTerms: true,\n};\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = 'Required';\n  }\n  if (!values.password) {\n    errors.password = 'Required';\n  }\n  if (!values.repassword) {\n    errors.repassword = 'Required';\n  }\n  if (!values.email) {\n    errors.email = 'Required';\n  }\n  if (!values.age) {\n    errors.age = 'Required';\n  }\n  if (!values.acceptTerms) {\n    errors.acceptTerms = 'Required';\n  }\n  return errors;\n};\n\nconst onSubmit = (values) => {\n  // console.log(values);\n  alert(JSON.stringify(values, null, 2));\n};\n\nconst Form = () => {\n  const formik = useFormik({\n    initialValues,\n    validate,\n    onSubmit,\n  });\n\n  console.log('form values', formik.values);\n  console.log('form errors', formik.errors);\n\n  return (\n    // action=\"http://localhost:3012/sign-up\"\n    // method=\"POST\"\n    <form onSubmit={formik.handleSubmit} className=\"form\">\n      <div>\n        <label htmlFor=\"name\">\n          name\n          {' '}\n          {formik.errors.name ? <span className=\"error\">{formik.errors.name}</span> : null}\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n          />\n        </label>\n      </div>\n      <div>\n        <label htmlFor=\"pwd\">\n          Password:\n          {formik.errors.password ? <span className=\"error\">{formik.errors.password}</span> : null}\n          <input\n            id=\"pwd\"\n            type=\"password\"\n            name=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n        </label>\n      </div>\n      <div>\n        <label htmlFor=\"repwd\">\n          rePassword:\n          {formik.errors.repassword ? (\n            <span className=\"error\">{formik.errors.repassword}</span>\n          ) : null}\n          <input\n            id=\"repwd\"\n            type=\"password\"\n            name=\"repassword\"\n            onChange={formik.handleChange}\n            value={formik.values.repassword}\n          />\n        </label>\n      </div>\n      <div>\n        <label htmlFor=\"email\">\n          email\n          {formik.errors.email ? <span className=\"error\">{formik.errors.email}</span> : null}\n          <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n        </label>\n      </div>\n\n      <div>\n        <label htmlFor=\"site\">\n          website\n          <input\n            id=\"site\"\n            type=\"text\"\n            name=\"website\"\n            onChange={formik.handleChange}\n            value={formik.values.website}\n          />\n        </label>\n      </div>\n\n      <div>\n        <label htmlFor=\"age\">\n          age\n          {formik.errors.age ? <span className=\"error\">{formik.errors.age}</span> : null}\n          <input\n            id=\"age\"\n            type=\"text\"\n            name=\"age\"\n            onChange={formik.handleChange}\n            value={formik.values.age}\n          />\n        </label>\n      </div>\n\n      <div>\n        <label htmlFor=\"skills\">\n          skills\n          <input\n            id=\"skills\"\n            type=\"text\"\n            name=\"skills\"\n            onChange={formik.handleChange}\n            value={formik.values.skills}\n          />\n        </label>\n      </div>\n\n      <div>\n        <label htmlFor=\"terms\">\n          acceptTerms\n          {formik.errors.acceptTerms ? (\n            <span className=\"error\">{formik.errors.acceptTerms}</span>\n          ) : null}\n          <input\n            id=\"terms\"\n            type=\"checkbox\"\n            name=\"acceptTerms\"\n            onChange={formik.handleChange}\n            value={formik.values.acceptTerms}\n          />\n        </label>\n      </div>\n\n      <div>\n        <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport Form from '../form/form';\n\nimport './app.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <h2>Sign-up Form</h2>\n    <Form />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}