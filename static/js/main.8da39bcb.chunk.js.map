{"version":3,"sources":["components/form/form.js","components/app/app.js","index.js"],"names":["submitForm","state","errorMessage","successMessage","initialValues","name","password","passwordConfirmation","email","website","age","skills","acceptTerms","validationSchema","Yup","max","required","oneOf","min","onSubmit","values","filteredSkills","filter","Boolean","axios","post","then","response","setState","data","catch","err","this","className","htmlFor","Item","id","placeholder","Password","rowKey","row","size","pagination","columns","title","key","render","text","record","i","createNewRow","type","React","Component","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8da39bcb.chunk.js","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport {\n  Form, Input, InputNumber, Table, AddRowButton, Checkbox,\n} from 'formik-antd';\nimport './form.scss';\n\nclass submitForm extends React.Component {\n  state = {\n    errorMessage: null,\n    successMessage: null,\n  };\n\n  initialValues = {\n    name: '',\n    password: '',\n    passwordConfirmation: '',\n    email: '',\n    website: '',\n    age: '',\n    skills: [''],\n    acceptTerms: false,\n  };\n\n  validationSchema = Yup.object({\n    name: Yup.string().max(50, 'Слишком длинно - не более 50 символов').required('Имя обязательно'),\n    password: Yup.string().required('Пароль нужен'),\n    passwordConfirmation: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Надо точь-в-точь как пароль')\n      .required('Обязательно'),\n    email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n    age: Yup.number()\n      .min(18, 'Юнцам тут не место')\n      .max(65, 'Займись лучше внуками, дедуля')\n      .required('Сколько тебе лет?'),\n    skills: Yup.array(),\n    acceptTerms: Yup.bool().oneOf([true], 'Нужно  твое согласие'),\n  });\n\n  onSubmit = (values) => {\n    const filteredSkills = values.skills.filter(Boolean);\n    // alert(JSON.stringify(values, null, 2));\n    axios\n      .post('http://localhost:3012/sign-up', { ...values, skills: filteredSkills })\n      .then((response) => {\n        // console.log(`получил клиент ${response.data}`);\n        this.setState({ errorMessage: null, successMessage: response.data });\n      })\n      .catch((err) => {\n        // console.log('axios client', err.response, err.response.data);\n        this.setState({ errorMessage: err.response.data, successMessage: null });\n      });\n  };\n\n  render() {\n    const { successMessage, errorMessage } = this.state;\n    return (\n      <Formik\n        initialValues={this.initialValues}\n        validationSchema={this.validationSchema}\n        onSubmit={this.onSubmit}\n      >\n        <Form className=\"form\">\n          <div>\n            <label htmlFor=\"name\">Имя</label>\n            <Form.Item name=\"name\">\n              <Input id=\"name\" name=\"name\" placeholder=\"Иван\" />\n            </Form.Item>\n          </div>\n          <div>\n            <label htmlFor=\"pwd\">Пароль </label>\n            <Form.Item name=\"password\">\n              <Input.Password id=\"pwd\" name=\"password\" placeholder=\"bu@UYvj#lkfhk!))nkjshd\" />\n            </Form.Item>\n          </div>\n          <div>\n            <label htmlFor=\"repwd\">Повторите пароль</label>\n            <Form.Item name=\"passwordConfirmation\">\n              <Input.Password\n                id=\"repwd\"\n                name=\"passwordConfirmation\"\n                placeholder=\"bu@UYvj#lkfhk!))nkjshd\"\n              />\n            </Form.Item>\n          </div>\n          <div>\n            <label htmlFor=\"email\">Электропочта </label>\n            <span className=\"error\">{errorMessage}</span>\n            <Form.Item name=\"email\">\n              <Input id=\"email\" name=\"email\" placeholder=\"ivan@mail.ru\" />\n            </Form.Item>\n          </div>\n\n          <div>\n            <label htmlFor=\"site\">Ваш сайт </label>\n            <Input id=\"site\" name=\"website\" placeholder=\"www.ivan.ru\" />\n          </div>\n\n          <div>\n            <label htmlFor=\"age\">Возраст </label>\n            <Form.Item name=\"age\">\n              <InputNumber id=\"age\" name=\"age\" placeholder=\"Возраст\" />\n            </Form.Item>\n          </div>\n\n          {/* <div>\n            <label htmlFor=\"skills\">Навыки </label>\n            <Field id=\"skills\" type=\"text\" name=\"skills\" placeholder=\"Навыки\" />\n          </div> */}\n\n          {/* <AddRowButton\n            name=\"skills\"\n            createNewRow={(text, record) => ({\n              name: record,\n            })} */}\n\n          <Table\n            name=\"skills\"\n            rowKey={(row) => `${row.id}`}\n            size=\"small\"\n            pagination={false}\n            columns={[\n              {\n                title: 'Cуперспособности',\n                key: 'name',\n                render: (text, record, i) => <Input name={`skills[${i}]`} />,\n              },\n            ]}\n          />\n          <AddRowButton\n            name=\"skills\"\n            createNewRow={(text) => text || ''}\n\n            // createNewRow={(text, record) => record}\n          >\n            Добавить суперспособность\n          </AddRowButton>\n\n          <div>\n            <Form.Item name=\"acceptTerms\">\n              <Checkbox id=\"terms\" name=\"acceptTerms\" />\n              <label htmlFor=\"terms\"> Согласен с условиями </label>\n            </Form.Item>\n          </div>\n\n          <div>\n            <button type=\"submit\">Зарегистрироваться</button>\n            <span className=\"success\">{successMessage}</span>\n          </div>\n        </Form>\n      </Formik>\n    );\n  }\n}\nexport default submitForm;\n","import React from 'react';\nimport Form from '../form/form';\n\nimport './app.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <h2>Sign-up Form</h2>\n    <Form />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}