{"version":3,"sources":["components/form/form.js","components/app/app.js","index.js"],"names":["submitForm","state","loading","errorMessage","successMessage","initialValues","name","password","passwordConfirmation","email","website","skills","acceptTerms","validationSchema","Yup","max","required","oneOf","url","age","min","onSubmit","values","filteredSkills","filter","Boolean","setState","axios","post","then","response","data","catch","err","this","className","htmlFor","Item","id","placeholder","size","Password","rowKey","row","pagination","columns","title","key","render","text","record","i","createNewRow","React","Component","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c848e65b.chunk.js","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport {\n  Form,\n  Input,\n  InputNumber,\n  Table,\n  AddRowButton,\n  Checkbox,\n  SubmitButton,\n  ResetButton,\n} from 'formik-antd';\nimport './form.scss';\n\nclass submitForm extends React.Component {\n  state = {\n    loading: false,\n    errorMessage: null,\n    successMessage: null,\n  };\n\n  initialValues = {\n    name: '',\n    password: '',\n    passwordConfirmation: '',\n    email: '',\n    website: '',\n    // age: '',\n    skills: [''],\n    acceptTerms: false,\n  };\n\n  validationSchema = Yup.object({\n    name: Yup.string().max(50, 'Слишком длинно - не более 50 символов').required('Имя обязательно'),\n    password: Yup.string().required('Пароль нужен'),\n    passwordConfirmation: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Надо точь-в-точь как пароль')\n      .required('Обязательно'),\n    email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n    website: Yup.string().url('Неверный адрес сайта'),\n    age: Yup.number()\n      .min(18, 'Юнцам тут не место')\n      .max(65, 'Займись лучше внуками, дедуля')\n      .required('Сколько тебе лет?'),\n    skills: Yup.array(),\n    acceptTerms: Yup.bool().oneOf([true], 'Нужно  твое согласие'),\n  });\n\n  onSubmit = (values) => {\n    const filteredSkills = values.skills.filter(Boolean);\n    this.setState({ loading: true });\n    axios\n      .post('http://localhost:3012/sign-up', { ...values, skills: filteredSkills })\n      .then((response) => {\n        this.setState({ errorMessage: null, successMessage: response.data, loading: false });\n      })\n      .catch((err) => {\n        this.setState({ errorMessage: err.response.data, successMessage: null, loading: false });\n      });\n  };\n\n  render() {\n    const { successMessage, errorMessage, loading } = this.state;\n    return (\n      <Formik\n        initialValues={this.initialValues}\n        validationSchema={this.validationSchema}\n        onSubmit={this.onSubmit}\n      >\n        <Form className=\"form\">\n          <div>\n            <label htmlFor=\"name\">Имя</label>\n            <Form.Item name=\"name\">\n              <Input id=\"name\" name=\"name\" placeholder=\"Иван\" size=\"large\" />\n            </Form.Item>\n          </div>\n          <div>\n            <label htmlFor=\"pwd\">Пароль </label>\n            <Form.Item name=\"password\">\n              <Input.Password\n                id=\"pwd\"\n                name=\"password\"\n                placeholder=\"bu@UYvj#lkfhk!))nkjshd\"\n                size=\"large\"\n              />\n            </Form.Item>\n          </div>\n          <div>\n            <label htmlFor=\"repwd\">Повторите пароль</label>\n            <Form.Item name=\"passwordConfirmation\">\n              <Input.Password\n                id=\"repwd\"\n                name=\"passwordConfirmation\"\n                placeholder=\"bu@UYvj#lkfhk!))nkjshd\"\n                size=\"large\"\n              />\n            </Form.Item>\n          </div>\n          <div>\n            <label htmlFor=\"email\">Электропочта </label>\n            <span className=\"error\">{errorMessage}</span>\n            <Form.Item name=\"email\">\n              <Input id=\"email\" name=\"email\" placeholder=\"ivan@mail.ru\" size=\"large\" />\n            </Form.Item>\n          </div>\n\n          <div>\n            <label htmlFor=\"site\">Ваш сайт </label>\n            <Form.Item name=\"website\">\n              <Input id=\"site\" name=\"website\" placeholder=\"http://www.ivan.ru\" size=\"large\" />\n            </Form.Item>\n          </div>\n\n          <div>\n            <label htmlFor=\"age\">Возраст </label>\n            <Form.Item name=\"age\">\n              <InputNumber id=\"age\" name=\"age\" placeholder=\"Возраст\" size=\"large\" />\n            </Form.Item>\n          </div>\n\n          <Table\n            name=\"skills\"\n            rowKey={(row) => `${row.id}`}\n            size=\"small\"\n            pagination={false}\n            columns={[\n              {\n                title: 'Cуперспособности',\n                key: 'name',\n                render: (text, record, i) => (\n                  <Input name={`skills[${i}]`} placeholder=\"Телепатия\" size=\"large\" />\n                ),\n              },\n            ]}\n          />\n          <AddRowButton name=\"skills\" createNewRow={(text) => text || ''} size=\"large\">\n            Добавить суперспособность\n          </AddRowButton>\n\n          <div>\n            <Form.Item name=\"acceptTerms\">\n              <Checkbox id=\"terms\" name=\"acceptTerms\" />\n              <label htmlFor=\"terms\"> Согласен с условиями </label>\n            </Form.Item>\n          </div>\n\n          <div>\n            <SubmitButton loading={loading} size=\"large\" className=\"button\">\n              Зарегистрироваться\n            </SubmitButton>\n            <ResetButton size=\"large\" className=\"button\">\n              Очистить форму\n            </ResetButton>\n            <div className=\"success\">{successMessage}</div>\n          </div>\n        </Form>\n      </Formik>\n    );\n  }\n}\nexport default submitForm;\n","import React from 'react';\nimport Form from '../form/form';\n\nimport './app.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <h2>Sign-up Form</h2>\n    <Form />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}